#include <stdio.h>

// Function to check if a number is prime
int isPrime(int n) {
    if (n <= 1) {
        return 0; // 0 and 1 are not prime
    }
    for (int i = 2; i * i <= n; i++) {
        if (n % i == 0) {
            return 0; // n is divisible by i, so it's not prime
        }
    }
    return 1; // n is prime
}

// Function to find and print prime factors of a number
void primeFactors(int n) {
    // Check for and print all the 2s
    while (n % 2 == 0) {
        printf("2 ");
        n = n / 2;
    }
    
    // Check for and print other prime factors
    for (int i = 3; i <= n; i = i + 2) {
        while (n % i == 0) {
            if (isPrime(i)) {
                printf("%d ", i);
            }
            n = n / i;
        }
    }
    
    if (n > 1) {
        // If the remaining number is greater than 1, it is a prime factor
        printf("%d ", n);
    }
}

int main() {
    int num;
    printf("Enter a positive integer: ");
    scanf("%d", &num);

    if (num <= 1) {
        printf("Prime factors are not defined for numbers less than 2.\n");
    } else {
        printf("Prime factors of %d are: ", num);
        primeFactors(num);
        printf("\n");
    }

    return 0;
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
\\ new code\\
#include <stdio.h>

void main()

(int num) {
    if (num <= 1) {
        return false;
    }
    if (num <= 3) {
        return true;
    }
    if (num % 2 == 0 || num % 3 == 0) {
        return false;
    }

    for (int i = 5; i * i <= num; i += 6) {
        if (num % i == 0 || num % (i + 2) == 0) {
            return false;
        }
    }

    return true;
}

int main() {
    int n, sum = 0;

    printf("Enter a positive integer (n): ");
    scanf("%d", &n);

    for (int i = 2; i <= n; i++) {
        if (isPrime(i)) {
            sum += i;
        }
    }

    printf("Sum of prime numbers between 1 and %d is: %d\n", n, sum);

    return 0;
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
\\new code\\

#include <stdio.h>

int main() {
  int number, i, isPrime = 0;

  printf("Enter any number: ");
  scanf("%d", &number);

  // Iterate from 2 to number/2
  for (i = 2; i <= number / 2; i++) {
    // If number is divisible by any number between 2 and number/2, it is not prime
    if (number % i == 0) {
      isPrime = 1;
      break;
    }
  }

  // If number is not divisible by any number between 2 and number/2, it is prime
  if (isPrime == 0) {
    printf("%d is a prime number.", number);
  } else {
    printf("%d is not a prime number.", number);
  }

  return 0;
}
------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------
\\new code\\
# include<stdio.h>

void main()
 
 int n;
 int last_digite;
 int fast_digite;

 printf("enter a valu of n/n");
 scanf("%d",&n);
 last _digite = n % 10;

 while(n >= 10)
 {
    n = n/10;
    printf("%d\n last_digite");
    printf("%d\n fast_digite");

 }
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
\\new code\\
#include <stdio.h>

int main() {
    int number, i;

    // Input a number from the user
    printf("Enter a number: ");
    scanf("%d", &number);

    // Display the multiplication table for the entered number
    printf("Multiplication table for %d:\n", number);

    for (i = 1; i <= 10; i++) {
        printf("%d x %d = %d\n", number, i, number * i);
    }

    return 0;
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
\\new code\\
#include <stdio.h>

int main() {
    int number, firstDigit, lastDigit;

    // Input a number from the user
    printf("Enter a number: ");
    scanf("%d", &number);

    // Find the last digit (remainder when divided by 10)
    lastDigit = number % 10;

    // Find the first digit by repeatedly dividing by 10
    while (number >= 10) {
        number /= 10;
    }
    firstDigit = number;

    // Output the first and last digits
    printf("First digit: %d\n", firstDigit);
    printf("Last digit: %d\n", lastDigit);

    return 0;
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
\\\new code
#include <stdio.h>

int main() {
    int number, product = 1;

    // Input from the user
    printf("Enter a number: ");
    scanf("%d", &number);

    // Calculate the product of digits
    while (number != 0) {
        int digit = number % 10;  // Get the last digit
        product *= digit;        // Multiply by the digit
        number /= 10;            // Remove the last digit
    }

    // Output the result
    printf("Product of the digits: %d\n", product);

    return 0;
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
\\new code\\
#include <stdio.h>
#include <math.h>

// Function to calculate the number of digits in a number
int countDigits(int num) {
    int count = 0;
    while (num != 0) {
        count++;
        num /= 10;
    }
    return count;
}

// Function to check if a number is an Armstrong number
bool isArmstrong(int num) {
    int originalNum = num;
    int n = countDigits(num);
    int sum = 0;

    while (num > 0) {
        int digit = num % 10;
        sum += pow(digit, n);
        num /= 10;
    }

    return (sum == originalNum);
}

int main() {
    int n;

    printf("Enter a positive integer (n): ");
    scanf("%d", &n);

    printf("Armstrong numbers between 1 and %d are:\n", n);

    for (int i = 1; i <= n; i++) {
        if (isArmstrong(i)) {
            printf("%d\n", i);
        }
    }

    return 0;
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
\\new code\\
# include <stdio.h>

void maim()
{
int n;
int 1;


printf("enter value of n1\n");
scanf("%d",&n);


i = 1;

while (i <= n)
{
printf("%d\n",i);
i++;
}

}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
\\new code\\
#include <stdio.h>

// Function to convert a number to words for numbers up to 999
void numberToWords(int number) {
    // Arrays to store words for numbers up to 19 and tens
    char *units[] = {"", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
    char *tens[] = {"", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"};

    if (number >= 1 && number <= 19) {
        printf("%s", units[number]);
    } else if (number >= 20 && number <= 99) {
        int tensDigit = number / 10;
        int onesDigit = number % 10;
        printf("%s", tens[tensDigit]);
        if (onesDigit > 0) {
            printf("-%s", units[onesDigit]);
        }
    } else if (number >= 100 && number <= 999) {
        int hundredsDigit = number / 100;
        int remainingDigits = number % 100;
        printf("%s Hundred", units[hundredsDigit]);
        if (remainingDigits > 0) {
            printf(" and ");
            numberToWords(remainingDigits);
        }
    }
}

int main() {
    int number;

    // Input from the user
    printf("Enter a number (1 to 999): ");
    scanf("%d", &number);

    if (number >= 1 && number <= 999) {
        // If the number is within the valid range, print it in words
        numberToWords(number);
        printf("\n");
    } else {
        printf("Number out of range (1 to 999).\n");
    }

    return 0;
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
\\new code\\
#include <stdio.h>

int main() {
    int num1, num2, temp;

    // Input the two numbers
    printf("Enter the first number: ");
    scanf("%d", &num1);
    printf("Enter the second number: ");
    scanf("%d", &num2);

    // Swap the numbers using a temporary variable
    temp = num1;
    num1 = num2;
    num2 = temp;

    // Display the swapped numbers
    printf("After swapping:\n");
    printf("First number: %d\n", num1);
    printf("Second number: %d\n", num2);

    return 0;
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
\\new code\\

#include <stdio.h>

int main() {
    int n;

    // Input the number of rows 'n' from the user
    printf("Enter the number of rows for the inverted right-angled triangle: ");
    scanf("%d", &n);

    // Check if 'n' is a positive integer
    if (n <= 0) {
        printf("Please enter a positive integer for the number of rows.\n");
        return 1;
    }

    // Loop to print the inverted right-angled triangle pattern
    for (int i = n; i > 0; i--) {
        for (int j = 0; j < i; j++) {
            printf("* ");
        }
        printf("\n");
    }

    return 0;
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
\\new code\\

# include<stdio.h>

void main()
 
 int n;
 int last_digite;
 int fast_digite;

 printf("enter a valu of n/n");
 scanf("%d",&n);
 last _digite = n % 10;

 while(n >= 10)
 {
    n = n/10;
    printf("%d\n last_digite");
    printf("%d\n fast_digite");

 }
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
\\ run a program c \\ in linux
cd Desktop
ls = all files
gcc = file name
./ file name \\

